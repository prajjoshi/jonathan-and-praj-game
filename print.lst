


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000                 PRESERVE8
   20 00000000         
   21 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   22 00000000         ; Output a 32-bit number in unsigned decimal format
   23 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   24 00000000         ; Output: none
   25 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   26 00000000         LCD_OutDec
   27 00000000         
   28 00000000 B510            PUSH             {R4, LR}    ;using R4 and LR
   29 00000002         
   30 00000002 F04F 0400       MOV              R4, #0
   31 00000006 F04F 010A       MOV              R1, #10
   32 0000000A         OUTD_LOOP
   33 0000000A FBB0 F2F1       UDIV             R2, R0, R1  ;loop and push all 
                                                            numbers onto stack
   34 0000000E FB02 F301       MUL              R3, R2, R1
   35 00000012 3300            ADDS             R3, #0
   36 00000014 D007            BEQ              OUTD_DONE
   37 00000016 EBA0 0003       SUB              R0, R0, R3
   38 0000001A B401            PUSH             {R0}
   39 0000001C 4610            MOV              R0, R2
   40 0000001E F104 0401       ADD              R4, #1
   41 00000022 F7FF FFF2       BL               OUTD_LOOP
   42 00000026         
   43 00000026         OUTD_DONE
   44 00000026 F100 0030       ADD              R0, #0x30
   45 0000002A F7FF FFFE       BL               ST7735_OutChar
   46 0000002E 2C00            CMP              R4, #0
   47 00000030 D006            BEQ              REALLY_DONE
   48 00000032         
   49 00000032         OUTD_OUTPUT
   50 00000032 BC01            POP              {R0}        ;loop and pop all n
                                                            umbers off of stack



ARM Macro Assembler    Page 2 


                                                            
   51 00000034 F100 0030       ADD              R0, #0x30
   52 00000038 F7FF FFFE       BL               ST7735_OutChar ;output each num
                                                            ber one by one
   53 0000003C 3C01            SUBS             R4, #1
   54 0000003E D1F8            BNE              OUTD_OUTPUT
   55 00000040         
   56 00000040         
   57 00000040         REALLY_DONE
   58 00000040 E8BD 4010       POP              {R4, LR}
   59 00000044         
   60 00000044 4770            BX               LR
   61 00000046         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   62 00000046         
   63 00000046         ; -----------------------LCD _OutFix--------------------
                       --
   64 00000046         ; Output characters to LCD display in fixed-point format
                       
   65 00000046         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   66 00000046         ; Inputs:  R0 is an unsigned 32-bit number
   67 00000046         ; Outputs: none
   68 00000046         ; E.g., R0=0,    then output "0.000 "
   69 00000046         ;       R0=3,    then output "0.003 "
   70 00000046         ;       R0=89,   then output "0.089 "
   71 00000046         ;       R0=123,  then output "0.123 "
   72 00000046         ;       R0=9999, then output "9.999 "
   73 00000046         ;       R0>9999, then output "*.*** "
   74 00000046         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   75 00000046         LCD_OutFix
   76 00000046         
   77 00000046         
   78 00000046         
   79 00000046 B500            PUSH             {LR}        ;using LR and R4
   80 00000048 B410            PUSH             {R4}
   81 0000004A F04F 0400       MOV              R4, #0
   82 0000004E F242 7110       MOV              R1, #10000
   83 00000052 4288            CMP              R0, R1
   84 00000054 D20F            BHS              TOOBIG      ; branch higher or 
                                                            same
   85 00000056         
   86 00000056 F04F 010A       MOV              R1, #10
   87 0000005A         OUTF_LOOP
   88 0000005A FBB0 F2F1       UDIV             R2, R0, R1  ;loop and push all 
                                                            numbers onto stack
   89 0000005E FB02 F301       MUL              R3, R2, R1
   90 00000062 3300            ADDS             R3, #0
   91 00000064 D01E            BEQ              OUTF_DONE
   92 00000066 EBA0 0003       SUB              R0, R0, R3
   93 0000006A B401            PUSH             {R0}
   94 0000006C 4610            MOV              R0, R2
   95 0000006E F104 0401       ADD              R4, #1
   96 00000072 F7FF FFF2       BL               OUTF_LOOP
   97 00000076         
   98 00000076         
   99 00000076         
  100 00000076         TOOBIG
  101 00000076 F04F 002A       MOV              R0, #0x2A   ;star ASCII hex val



ARM Macro Assembler    Page 3 


                                                            ue
  102 0000007A F7FF FFFE       BL               ST7735_OutChar ;if the number i
                                                            s too big, output a
                                                            ll stars
  103 0000007E F04F 002E       MOV              R0, #0x2E
  104 00000082 F7FF FFFE       BL               ST7735_OutChar
  105 00000086 F04F 002A       MOV              R0, #0x2A
  106 0000008A F7FF FFFE       BL               ST7735_OutChar
  107 0000008E F04F 002A       MOV              R0, #0x2A
  108 00000092 F7FF FFFE       BL               ST7735_OutChar
  109 00000096 F04F 002A       MOV              R0, #0x2A
  110 0000009A F7FF FFFE       BL               ST7735_OutChar
  111 0000009E E8BD 4010       POP              {LR, R4}
  112 000000A2         
  113 000000A2 4770            BX               LR
  114 000000A4         
  115 000000A4         OUTF_DONE
  116 000000A4 F04F 0103       MOV              R1, #3
  117 000000A8 42A1            CMP              R1, R4      ;determines the siz
                                                            e of the number and
                                                             branches
  118 000000AA D059            BEQ              FOUR
  119 000000AC F04F 0102       MOV              R1, #2
  120 000000B0 42A1            CMP              R1, R4
  121 000000B2 D007            BEQ              THREE
  122 000000B4 F04F 0101       MOV              R1, #1
  123 000000B8 42A1            CMP              R1, R4
  124 000000BA D01E            BEQ              TWO
  125 000000BC F04F 0100       MOV              R1, #0
  126 000000C0 42A1            CMP              R1, R4
  127 000000C2 D034            BEQ              ONE
  128 000000C4         
  129 000000C4 4604    THREE   MOV              R4, R0      ; PARTIAL NUMBER, F
                                                            ORMAT: 0.XXX
  130 000000C6 F04F 0030       MOV              R0, #0x30
  131 000000CA F7FF FFFE       BL               ST7735_OutChar 
                                                            ;first number is 0
  132 000000CE F04F 002E       MOV              R0, #0x2E
  133 000000D2 F7FF FFFE       BL               ST7735_OutChar
  134 000000D6 4620            MOV              R0, R4
  135 000000D8 F100 0030       ADD              R0, #0x30
  136 000000DC F7FF FFFE       BL               ST7735_OutChar ;convert to ASCI
                                                            I hex and output ea
                                                            ch number idividual
                                                            ly
  137 000000E0 BC01            POP              {R0}
  138 000000E2 F100 0030       ADD              R0, #0x30
  139 000000E6 F7FF FFFE       BL               ST7735_OutChar
  140 000000EA BC01            POP              {R0}
  141 000000EC F100 0030       ADD              R0, #0x30
  142 000000F0 F7FF FFFE       BL               ST7735_OutChar
  143 000000F4 E8BD 4010       POP              {LR, R4}
  144 000000F8         
  145 000000F8 4770            BX               LR
  146 000000FA         
  147 000000FA 4604    TWO     MOV              R4, R0      ; PARTIAL NUMBER, F
                                                            ORMAT: 0.0XX
  148 000000FC F04F 0030       MOV              R0, #0x30
  149 00000100 F7FF FFFE       BL               ST7735_OutChar



ARM Macro Assembler    Page 4 


  150 00000104 F04F 002E       MOV              R0, #0x2E
  151 00000108 F7FF FFFE       BL               ST7735_OutChar
  152 0000010C F04F 0030       MOV              R0, #0x30
  153 00000110 F7FF FFFE       BL               ST7735_OutChar ;first two numbe
                                                            rs are 0s
  154 00000114 4620            MOV              R0, R4
  155 00000116 F100 0030       ADD              R0, #0x30
  156 0000011A F7FF FFFE       BL               ST7735_OutChar ;convert to ASCI
                                                            I hex and output ea
                                                            ch number idividual
                                                            ly
  157 0000011E BC01            POP              {R0}
  158 00000120 F100 0030       ADD              R0, #0x30
  159 00000124 F7FF FFFE       BL               ST7735_OutChar
  160 00000128 E8BD 4010       POP              {LR, R4}
  161 0000012C         
  162 0000012C 4770            BX               LR
  163 0000012E         
  164 0000012E 4604    ONE     MOV              R4, R0      ; PARTIAL NUMBER, F
                                                            ORMAT: 0.00X
  165 00000130 F04F 0030       MOV              R0, #0x30
  166 00000134 F7FF FFFE       BL               ST7735_OutChar
  167 00000138 F04F 002E       MOV              R0, #0x2E
  168 0000013C F7FF FFFE       BL               ST7735_OutChar ;first three num
                                                            bers are 0s
  169 00000140 F04F 0030       MOV              R0, #0x30
  170 00000144 F7FF FFFE       BL               ST7735_OutChar
  171 00000148 F04F 0030       MOV              R0, #0x30
  172 0000014C F7FF FFFE       BL               ST7735_OutChar
  173 00000150 4620            MOV              R0, R4
  174 00000152 F100 0030       ADD              R0, #0x30
  175 00000156 F7FF FFFE       BL               ST7735_OutChar ;convert to ASCI
                                                            I hex and output ea
                                                            ch number idividual
                                                            ly
  176 0000015A E8BD 4010       POP              {LR, R4}
  177 0000015E         
  178 0000015E 4770            BX               LR
  179 00000160         
  180 00000160         FOUR
  181 00000160 F100 0030       ADD              R0, #0x30   ; FULL NUMBER, FORM
                                                            AT: X.XXX
  182 00000164 F7FF FFFE       BL               ST7735_OutChar ; FIRST NUMBER
  183 00000168 F04F 002E       MOV              R0, #0x2E
  184 0000016C F7FF FFFE       BL               ST7735_OutChar ; .
  185 00000170 BC01            POP              {R0}
  186 00000172 F100 0030       ADD              R0, #0x30
  187 00000176 F7FF FFFE       BL               ST7735_OutChar ; SECOND NUMBER
  188 0000017A BC01            POP              {R0}
  189 0000017C F100 0030       ADD              R0, #0x30
  190 00000180 F7FF FFFE       BL               ST7735_OutChar ; THIRD NUMBER
  191 00000184 BC01            POP              {R0}
  192 00000186 F100 0030       ADD              R0, #0x30
  193 0000018A F7FF FFFE       BL               ST7735_OutChar ; FOURTH (AND FI
                                                            NAL) NUMBER
  194 0000018E E8BD 4010       POP              {LR, R4}
  195 00000192         
  196 00000192         
  197 00000192         



ARM Macro Assembler    Page 5 


  198 00000192         
  199 00000192 4770            BX               LR
  200 00000194         
  201 00000194                 ALIGN
  202 00000194         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  203 00000194         
  204 00000194                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  205 00000194                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
FOUR 00000160

Symbol: FOUR
   Definitions
      At line 180 in file Print.s
   Uses
      At line 118 in file Print.s
Comment: FOUR used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 26 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000046

Symbol: LCD_OutFix
   Definitions
      At line 75 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
ONE 0000012E

Symbol: ONE
   Definitions
      At line 164 in file Print.s
   Uses
      At line 127 in file Print.s
Comment: ONE used once
OUTD_DONE 00000026

Symbol: OUTD_DONE
   Definitions
      At line 43 in file Print.s
   Uses
      At line 36 in file Print.s
Comment: OUTD_DONE used once
OUTD_LOOP 0000000A

Symbol: OUTD_LOOP
   Definitions
      At line 32 in file Print.s
   Uses
      At line 41 in file Print.s
Comment: OUTD_LOOP used once
OUTD_OUTPUT 00000032

Symbol: OUTD_OUTPUT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 49 in file Print.s
   Uses
      At line 54 in file Print.s
Comment: OUTD_OUTPUT used once
OUTF_DONE 000000A4

Symbol: OUTF_DONE
   Definitions
      At line 115 in file Print.s
   Uses
      At line 91 in file Print.s
Comment: OUTF_DONE used once
OUTF_LOOP 0000005A

Symbol: OUTF_LOOP
   Definitions
      At line 87 in file Print.s
   Uses
      At line 96 in file Print.s
Comment: OUTF_LOOP used once
REALLY_DONE 00000040

Symbol: REALLY_DONE
   Definitions
      At line 57 in file Print.s
   Uses
      At line 47 in file Print.s
Comment: REALLY_DONE used once
THREE 000000C4

Symbol: THREE
   Definitions
      At line 129 in file Print.s
   Uses
      At line 121 in file Print.s
Comment: THREE used once
TOOBIG 00000076

Symbol: TOOBIG
   Definitions
      At line 100 in file Print.s
   Uses
      At line 84 in file Print.s
Comment: TOOBIG used once
TWO 000000FA

Symbol: TWO
   Definitions
      At line 147 in file Print.s
   Uses
      At line 124 in file Print.s
Comment: TWO used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 45 in file Print.s
      At line 52 in file Print.s
      At line 102 in file Print.s
      At line 104 in file Print.s
      At line 106 in file Print.s
      At line 108 in file Print.s
      At line 110 in file Print.s
      At line 131 in file Print.s
      At line 133 in file Print.s
      At line 136 in file Print.s
      At line 139 in file Print.s
      At line 142 in file Print.s
      At line 149 in file Print.s
      At line 151 in file Print.s
      At line 153 in file Print.s
      At line 156 in file Print.s
      At line 159 in file Print.s
      At line 166 in file Print.s
      At line 168 in file Print.s
      At line 170 in file Print.s
      At line 172 in file Print.s
      At line 175 in file Print.s
      At line 182 in file Print.s
      At line 184 in file Print.s
      At line 187 in file Print.s
      At line 190 in file Print.s
      At line 193 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
347 symbols in table
